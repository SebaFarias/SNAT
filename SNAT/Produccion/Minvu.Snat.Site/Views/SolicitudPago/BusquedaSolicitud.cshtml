@model Minvu.Snat.Domain.Forms.BusquedaSolicitudPago
@{
    ViewBag.Title = "Busqueda Solicitud de Pago";
}


@if (Model._modificacionEstadoSolicitudEntities != null)
{
    <script>
        $(document).ready(function () {
            if (@Model._modificacionEstadoSolicitudEntities.codigoSalida == "1") {
                $('#modalOk').modal('toggle');
                $('#divBusqueda').show();
                $("#strongBusqueda").html("@Model._modificacionEstadoSolicitudEntities.mensajeSalida");
            }
            else {
                $('#modalOk').modal('toggle');
                $('#divBusquedaError').show();
                $("#strongBusquedaError").html("@Model._modificacionEstadoSolicitudEntities.mensajeSalida");
            }
        });
    </script>
}

<script>
    function prueba(obj,id) {
        //var textonumber = formatNumber(obj.toString());
        $("#texto_" + id).text("AA");
        //$("#texto_" + id).text(textonumber);
    }

    function formatNumber(numero) {
        var nuevovalor = '';//valor final formateado en orden correcto

        var parteDecimal = '';//parte decimal del Numero completo
        var indice = numero.indexOf(',');//indice desde donde se encuentra la coma del decimal
        var parteEntera = '';//parte entera del numero completo

        if (indice > 0) {
            parteDecimal = numero.substring(indice, numero.length);
            parteEntera = numero.substring(0, numero.indexOf(','))
        } else {
            parteEntera = numero;
        }

        parteEntera = parteEntera.replace(/\.\b/gi, '');//Reseteo valor sin puntos

        if (numero.length > 3) {
            var indiceInvertido = 0;//Indice para invertir numero
            var valorInvertido;//valor invertido formateado con puntos

            if (parteEntera.length > 3) {
                for (i = 0; i < parteEntera.length; i++) {
                    indiceInvertido = parteEntera.length - i;

                    if (i != 0) {
                        if ((i % 3) == 0) {//multiplo de 3
                            valorInvertido = valorInvertido + '.' + parteEntera.substring((indiceInvertido - 1), indiceInvertido);
                        } else {
                            valorInvertido = valorInvertido + parteEntera.substring((indiceInvertido - 1), indiceInvertido);
                        }
                    } else {
                        valorInvertido = parteEntera.substring((indiceInvertido - 1), indiceInvertido);
                    }
                }

                indiceInvertido = 0;
                for (i = 0; i < valorInvertido.length; i++) {
                    indiceInvertido = valorInvertido.length - i;

                    nuevovalor = nuevovalor + valorInvertido.substring((indiceInvertido - 1), indiceInvertido);
                }

                nuevovalor = nuevovalor + parteDecimal;
            } else {
                nuevovalor = parteEntera + parteDecimal;
            }
        } else {
            nuevovalor = numero;
        }
        
        return nuevovalor;
    }
</script>



<script>
    function ActualizarCantidad(ingreso, salida, max) {
        var ln = $(ingreso).val().length;
        if (ln >= max) {
            $(salida).text('Límite de caracteres alcanzado');
        } else {
            var ch = max - ln;
            $(salida).text(ch + ' caracteres restantes');
        }
    }

    $(document).ready(function () {
        $('#nombreProveedor').on('input', function (e) {
            if (!/^[ a-z0-9áéíóúüñ.-[()]]*$/i.test(this.value)) {
                this.value = this.value.replace(/[^ a-z0-9áéíóúüñ.-[()]]+/ig, "");
            }
        });

        $('#nombreProveedor').keypress(function (e) {
            var keycode = (e.keyCode ? e.keyCode : e.which);
            var texto = $('#nombreProveedor').val();

            if (keycode == '32') {
                if (texto.length == 0) {
                    return false;
                } else if ((texto.substring(texto.length - 1, texto.length)) == ' ') {
                    return false;
                }
            }
        });
    });

</script>

<script type="text/javascript">
    // con esta función comprobás que sea un número
    function es_numero(input) {
        return !isNaN(input) && parseInt(input) == input;
    }
    //ahora verificas que sea no sea mayor que 100
    function comprobar(value_elemento) {
        var laedad = value_elemento.value;
        if (es_numero(laedad)) {

        } else {
            value_elemento.value = "";
        }
    }
</script>

<script>
    function valida(e) {
        tecla = (document.all) ? e.keyCode : e.which;

        //Tecla de retroceso para borrar, siempre la permite
        if (tecla == 8) {
            return true;
        }

        // Patron de entrada, en este caso solo acepta numeros
        patron = /[0-9]/;
        tecla_final = String.fromCharCode(tecla);
        return patron.test(tecla_final);
    }
</script>

@if (Model._listadoSolicitudesEntities != null && Model._listadoSolicitudesEntities.Count > 0)
{
    <script>
        $(document).ready(function () {
            $('#grillaProyectos').DataTable({
                "pagingType": "simple_numbers" // "simple" option for 'Previous' and 'Next' buttons only
            });
            $('.dataTables_length').addClass('bs-select');
        });
    </script>
}

<script type="text/javascript">
    $(document).ready(function () {

        $("#codPr").rules("remove", "required");
        $("#ddlPrograma").rules("remove", "required");
        $("#ddlTipologia").rules("remove", "required");
        $("#ddlLlamado").rules("remove", "required");
        $("#ddlServicio").rules("remove", "required");
        $("#ddlTipoProveedor").rules("remove", "required");
        $("#dllModalidad").rules("remove", "required");

        $("#codPr").removeClass("input-validation-error")
        $("#ddlPrograma").removeClass("input-validation-error")
        $("#ddlTipologia").removeClass("input-validation-error")
        $("#ddlLlamado").removeClass("input-validation-error")
        $("#ddlServicio").removeClass("input-validation-error")
        $("#ddlTipoProveedor").removeClass("input-validation-error")
        $("#dllModalidad").removeClass("input-validation-error")

        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#myTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    $(document).ready(function () {
        //ddlRegion Selectedchange event
        $("#ddlRegion").change(function () {
            $("#ddlProvincia").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetProvincias")', //Llamada al metodo Json
                dataType: 'json',
                data: { idRegion: $("#ddlRegion").val() },//Obtenemos el "value" seleccionado del ddlregion y lo pasamos como input al metodo json "GetProvincias".
                success: function (provincia) {//provincia contiene el JSON formateado a list de provincia obtenido
                    $("#ddlProvincia").append('<option value="">-- Seleccione --</option>');//Agrego opcion "Seleccione"

                    $.each(provincia, function (i, provincia) {
                        //Se añaden las opciones obtenidas para el ddlProvincia
                        $("#ddlProvincia").append('<option value="' + provincia.Value + '">' +
                            provincia.Text + '</option>');
                    });
                    //Obtencion de todas las Comunas
                    $(function () {
                        $("#ddlComuna").empty();
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("GetComunasRegion")', //Llamada al metodo Json
                            dataType: 'json',
                            data: { idRegion: $("#ddlRegion").val() },//Paso vacio el idProvincia como input al metodo json "GetComunas".

                            success: function (comuna) {//provincia contiene el JSON formateado a list de provincia obtenido
                                $("#ddlComuna").append('<option value="">-- Seleccione --</option>');//Agrego opcion "Seleccione"

                                $.each(comuna, function (i, comuna) {
                                    //Se añaden las opciones obtenidas para el ddlProvincia
                                    $("#ddlComuna").append('<option value="' + comuna.Value + '">' +
                                        comuna.Text + '</option>');
                                });
                            },
                            error: function (ex) {
                                alert('Error al obtener Comunas.' + ex);
                            }
                        });
                        return false;
                    });
                },
                error: function (ex) {
                    alert('Error al obtener provincias.' + ex);
                }
            });
            return false;
        })

        //ddlProvincia Selectedchange event
        $("#ddlProvincia").change(function () {
            $("#ddlComuna").empty();

            if ($("#ddlProvincia").val() == '') {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetComunasRegion")', //Llamada al metodo Json
                    dataType: 'json',
                    data: { idRegion: $("#ddlRegion").val() },//Paso vacio el idProvincia como input al metodo json "GetComunasRegion".

                    success: function (comuna) {//provincia contiene el JSON formateado a list de provincia obtenido
                        $("#ddlComuna").append('<option value="">-- Seleccione --</option>');//Agrego opcion "Seleccione"

                        $.each(comuna, function (i, comuna) {
                            //Se añaden las opciones obtenidas para el ddlProvincia
                            $("#ddlComuna").append('<option value="' + comuna.Value + '">' +
                                comuna.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error al obtener Comunas.' + ex);
                    }
                });
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetComunas")', //Llamada al metodo Json
                    dataType: 'json',
                    data: { idProvincia: $("#ddlProvincia").val() },//Obtenemos el "value" seleccionado del ddlProvincia y lo pasamos como input al metodo json "GetComunas".
                    success: function (comuna) {//comuna contiene el JSON formateado a list de comunas obtenido
                        $("#ddlComuna").append('<option value="">-- Seleccione --</option>');//Agrego opcion "Seleccione"

                        $.each(comuna, function (i, comuna) {
                            //Se añaden las opciones obtenidas para el ddlComuna
                            $("#ddlComuna").append('<option value="' + comuna.Value + '">' +
                                comuna.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error al obtener Comunas.' + ex);
                    }
                });
            }

            return false;
        })

        //ddlComuna Selectedchange event
        $("#ddlComuna").change(function () {
            if ($("#ddlProvincia").value != '') {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SetProvinciaComuna")', //Llamada al metodo Json
                    dataType: 'json',
                    data: { idComuna: $("#ddlComuna").val() },//Obtenemos el "value" seleccionado del ddlComuna y lo pasamos como input al metodo json "GetComunas".
                    success: function (idProvincia) {//Obtengo el idProvincia segun la comuna enviada
                        $("#ddlProvincia").val(idProvincia);
                    },
                    error: function (ex) {
                        alert('Error al obtener idProvincia.' + ex);
                    }
                });
                return false;
            }
        })
       // ddlPrograma Selectedchange event
        $("#ddlPrograma").change(function () {
            $("#ddlTipologia").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetTipologiaPrograma")', //Llamada al metodo Json
                dataType: 'json',
                data: { idPrograma: $("#ddlPrograma").val() },//Obtenemos el "value" seleccionado del ddlTipologia y lo pasamos como input al metodo json "GetServicioTipologia".
                success: function (servicios) {//provincia contiene el JSON formateado a list de provincia obtenido
                    $("#ddlTipologia").append('<option value="">-- Seleccione --</option>');//Agrego opcion "Seleccione"

                    $.each(servicios, function (i, servicios) {
                        //Se añaden las opciones obtenidas para el ddlProvincia
                        $("#ddlTipologia").append('<option value="' + servicios.Value + '">' +
                            servicios.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Error al obtener tipologias.' + ex);
                }
            });
            return false;
        })


        //ddlTipologia Selectedchange event
       $("#ddlTipologia").change(function () {
            $("#ddlServicio").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetServicioTipologia")', //Llamada al metodo Json
                dataType: 'json',
                data: { idTipologia: $("#ddlTipologia").val(), idPrograma: $("#ddlPrograma").val() },//Obtenemos el "value" seleccionado del ddlTipologia y lo pasamos como input al metodo json "GetServicioTipologia".@*CambioQA*@
                success: function (servicios) {//provincia contiene el JSON formateado a list de provincia obtenido
                   $("#ddlServicio").append('<option value="">-- Seleccione --</option>');//Agrego opcion "Seleccione"

                    $.each(servicios, function (i, servicios) {
                        //Se añaden las opciones obtenidas para el ddlProvincia
                        $("#ddlServicio").append('<option value="' + servicios.Value + '">' +
                            servicios.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Error al obtener servicios.' + ex);
                }
            });
            return false;
        })
    });
</script>


@using (Html.BeginForm("BusquedaSolicitud", "SolicitudPago", FormMethod.Post, new { id = "formSolicitudPago" }))
{
    <div class="panel panel-info">
        <div class="panel-heading">
            <h2 class="panel-title">Búsqueda de solicitud de pago</h2>
        </div>
        
        <!-- #region Informacion proyecto -->
        <div class="panel-body">
            <div class="row">
                @*<a class="pull-right control-label input-sm" data-toggle="collapse" data-target="#demo">Búsqueda avanzada</a>*@
            </div>

            <div class="form-group  col-md-12">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._informacionProyectoEntities.codigoProyectoInformacionProyecto, new { @class = "input-sm" })
                </div>
                <div class="control-display col-md-4">
                    @Html.TextBoxFor(model => model._informacionProyectoEntities.codigoProyectoInformacionProyecto, new { @class = "form-control input-sm", onkeypress = "return valida(event)", @maxlength = "8", @id = "codPr", placeholder = "Ingrese código proyecto", @onblur = "comprobar(this)", onpaste = "return false;", onCopy = "return false", onCut = "return false", onDrag = "return false", onDrop = "return false" })
                </div>

                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._RegionesEntities.idRegion, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">

                    @if (Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_ConsultarSolPagoReg"))
                    {
                        @Html.DropDownListFor(m => m._regionUserEntities,
                                      new SelectList(Model._regionUserEntities, "idRegion", "nombreRegion", Model._regionUserEntities),
                                      new { @class = "form-control", id = "ddlRegion", name = "ddlRegion", @readonly = "readonly", disabled = "disabled" })

                    }

                    else 
                    {

                        @Html.DropDownListFor(model => model._RegionesEntities.idRegion, new SelectList(Model.lstRegiones, "idRegion", "nombreRegion"), "-- Seleccione --", new { @class = "form-control input-sm", id = "ddlRegion", name = "ddlRegion" })


                    }
                </div>
            </div>
            <div class="row"></div>
            <div class="form-group  col-md-12">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._maestroProgramaEntities.nombreMaestroPrograma, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model._maestroProgramaEntities.idMaestroPrograma, new SelectList(Model._lstPrograma, "idMaestroPrograma", "nombreMaestroPrograma"), "-- Seleccione --", new { @class = "form-control input-sm", id = "ddlPrograma", onpaste = "return false;", onCopy = "return false", onCut = "return false", onDrag = "return false", onDrop = "return false" })
                </div>
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._ProvinciasEntities.idProvincia, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model._ProvinciasEntities.idProvincia, new SelectList(Model.lstProvincias, "idProvincia", "nombreProvincia"), "-- Seleccione --", new { @class = "form-control input-sm", id = "ddlProvincia", name = "ddlProvincia" })
                </div>
            </div>
            <div class="form-group col-md-12">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._maestroTipologiaEntities.nombreMaestroTipologia, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model._maestroTipologiaEntities.idMaestroTipologia, new SelectList(Model.lstTipologias, "idMaestroTipologia", "nombreMaestroTipologia"), "-- Seleccione --", new { @class = "form-control input-sm", id = "ddlTipologia", name = "ddlTipologia" })
                </div>

                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._ComunasEntities.idComuna, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model._ComunasEntities.idComuna, new SelectList(Model.lstComunas, "idComuna", "nombreComuna"), "-- Seleccione --", new { @class = "form-control input-sm", id = "ddlComuna", name = "ddlComuna" })
                </div>
            </div>

            <div class="form-group  col-md-12">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._maestroServicioEntities.nombreMaestroServicio, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model._maestroServicioEntities.nombreMaestroServicio, new SelectList(Model.lstServicios, "idMaestroServicio", "nombreMaestroServicio"), "-- Seleccione --", new { @class = "form-control input-sm", id = "ddlServicio", name = "ddlServicio" })
                </div>
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._maestroLlamadoEntities.nombreMaestroLlamado, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model._maestroLlamadoEntities.idMaestroLlamado, new SelectList(Model.lstLlamado, "idMaestroLlamado", "nombreMaestroLlamado"), "-- Seleccione --", new { @class = "form-control input-sm", id = "ddlLlamado", name = "ddlLlamado" })
                </div>
            </div>
            
            <div class="form-group col-md-12">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._proovedorEntities.nombreProveedor, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @*@Html.TextBoxFor(model => model._proovedorEntities.nombreProveedor, new { @class = "form-control", placeholder = "Ingrese Nombre PSAT", id = "nombrePsat", maxlength = "200", onpaste = "return false;", onCopy = "return false", onCut = "return false", onDrag = "return false", onDrop = "return false", onblur = "changeFocus();", @onkeydown = "ActualizarCantidad(this, contadorCaracteresDescripcion, 100);", @onkeyup = "ActualizarCantidad(this, contadorCaracteresDescripcion, 200);" })
                        <span class="text-danger">@Html.ValidationMessageFor(model => model._proovedorEntities.nombreProveedor)</span>*@
                    @Html.TextAreaFor(model => model._proovedorEntities.nombreProveedor, new { @class = "form-control input-sm", placeholder = "Ingrese Nombre proveedor", id = "nombreProveedor", maxlength = "100", onpaste = "return false;", onCopy = "return false", onCut = "return false", onDrag = "return false", onDrop = "return false", @onkeydown = "ActualizarCantidad(this, contadorCaracteresDescripcion, 100);", @onkeyup = "ActualizarCantidad(this, contadorCaracteresDescripcion, 100);" })
                    <div class="align-left help-block input-sm" id="contadorCaracteresDescripcion">100 caracteres restantes</div>
                </div>
                
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._maestroTipoProveedorEntities.nombreMaestroTipoProveedor, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model._maestroTipoProveedorEntities.idMaestroTipoProveedor, new SelectList(Model.lstTipoProveedor, "idMaestroTipoProveedor", "nombreMaestroTipoProveedor"), "-- Seleccione --", new { @class = "form-control input-sm", id = "ddlTipoProveedor", name = "ddlTipoProveedor" })
                </div>
            </div>

            <div class="form-group  col-md-12 collapse" id="demo">
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._maestroModalidadEntities.nombreMaestroModalidad, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model._maestroModalidadEntities.idMaestroModalidad, new SelectList(Model.lstModalidades, "idMaestroModalidad", "nombreMaestroModalidad"), "-- Seleccione --", new { @class = "form-control input-sm", id = "dllModalidad", name = "dllModalidad" })
                </div>
                
                <div class="control-label col-md-2">
                    @Html.LabelFor(model => model._autorizacionEntities.idAutorizacion, new { @class = "input-sm" })
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model._autorizacionEntities.idAutorizacion, new { @class = "form-control input-sm", @placeholder = "No aplica", @disabled = "disabled", @maxlength = "8", @id = "idAut", @onblur = "comprobar(this)", onpaste = "return false;", onCopy = "return false", onCut = "return false", onDrag = "return false", onDrop = "return false" })
                </div>
            </div>
            
            <div class="form-group col-md-12">
                <div class="pull-right">
                    <a href="@Url.Action("Index", "Home", new { Area = ViewContext.RouteData.DataTokens["area"]})" class="btn btn-default btn-sm">volver</a>
                    @if (Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_GenerarSolPago") || Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_GenerarSolPagoReg"))
                    {
                        @Html.ActionLink("Generar solicitud de pago", "GeneracionSolicitudPago", "SolicitudPago", new { @class = "btn btn-primary btn-sm" })
                    }
                    else
                    {
                        @Html.ActionLink("Generar solicitud de pago", "GeneracionSolicitudPago", "SolicitudPago", new { @class = "btn btn-primary btn-sm", @disabled = "disabled" })
                    }
                    @if (Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_ConsultarSolPago") || Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_ConsultarSolPagoReg") || Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_GenerarAutPago") || Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_GenerarAutPagoReg") || Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_EliminarSolPago") || Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_EliminarSolPagoReg"))
                    {
                        <button class="btn btn-primary btn-sm" type="submit" id="btnBuscar">
                            <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                            Buscar
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-primary btn-sm" type="submit" id="btnBuscar" disabled>
                            <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                            Buscar proyecto
                        </button>
                    }
                    @Html.ActionLink("Limpiar", "BusquedaSolicitud", "SolicitudPago", new { @class = "btn btn-default btn-sm" })
                </div>
            </div>
        </div>
    </div>
}
<!-- #endregion -->
    
@using (Html.BeginForm("ActionGrid", "SolicitudPago", FormMethod.Post, new { id = "formEliminaProyecto", autocomplete = "off" }))
{
    <div class="panel panel-info">
        <div id="divGrillaProyecto">
            <div class="dataTables_wrapper form-inline dt-bootstrap no-footer">
                <div class="row">
                    <div class="col-sm-6"></div>
                    <div class="col-sm-6">
                        <div class="dataTables_filter" id="grillaProyectos_filter">
                            <label>
                                @*Buscar:
                        <input class="form-control" id="myInput" type="text" placeholder="Buscar..">*@
                            </label>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="gridscroll-wrapper-div">
                            <table class="table table-bordered table-condensed table-hover sma ll text-center dataTable no-footer" id="grillaProyectos" role="grid">
                                <thead>
                                    <tr class="active" role="row">
                                        <th tabindex="0" class="text-center sorting_asc" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Id solicitud" aria-sort="ascending" rowspan="1" colspan="1">ID Solicitud</th>
                                        <th tabindex="0" class="text-center sorting_asc" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Nombre programa" aria-sort="ascending" rowspan="1" colspan="1">Nombre programa</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Region" aria-sort="ascending" rowspan="1" colspan="1">Región</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Codigo de proyecto o n° rut" aria-sort="ascending" rowspan="1" colspan="1">Código de proyecto o N° Rut</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Tipologia" aria-sort="ascending" rowspan="1" colspan="1">Tipología</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="N vivienda" aria-sort="ascending" rowspan="1" colspan="1">N° Viviendas </th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="servicio" aria-sort="ascending" rowspan="1" colspan="1">Servicio </th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Rut proveedor" aria-sort="ascending" rowspan="1" colspan="1">Tipo proveedor</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Rut proveedor" aria-sort="ascending" rowspan="1" colspan="1">Rut proveedor</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Nombre proveedor " aria-sort="ascending" rowspan="1" colspan="1">Nombre proveedor </th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Estado solicitud" aria-sort="ascending" rowspan="1" colspan="1">Estado solicitud</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Monto solicitud" aria-sort="ascending" rowspan="1" colspan="1">Monto solicitud (UF)</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="N° autorización" aria-sort="ascending" rowspan="1" colspan="1">N° autorización</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Estado autorización" aria-sort="ascending" rowspan="1" colspan="1">Estado autorización</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="Acciones" aria-sort="ascending" rowspan="1" colspan="1">Acción</th>
                                        <th tabindex="0" class="text-center sorting" aria-controls="grillaProyecto" style="vertical-align: middle;" aria-label="A pago" aria-sort="ascending" rowspan="1" colspan="1">A pago</th>
                                    </tr>
                                </thead>
                                <tbody id="myTable">
                                    @if (Model._listadoSolicitudesEntities != null && Model._listadoSolicitudesEntities.Count > 0)
                                    {
                                        foreach (var item in Model._listadoSolicitudesEntities)
                                        {
                                            <tr class="odd" role="row">
                                                <td class="sorting_1" style="vertical-align: middle;"> @Html.ActionLink(item.idSolicitud.ToString(), "GeneracionSolicitudPago", new { idSolicitud = item.idSolicitud, codigoProyecto = item.codigoProyecto })</td> @*Html.ActionLink("88", "informacionservicios", "Servicios")*@
                                                <td style="vertical-align: middle;">@item.nombrePrograma</td>
                                                <td style="vertical-align: middle;">@item.codigoRegion</td>
                                                <td style="vertical-align: middle;">@item.codigoProyecto</td>
                                                <td style="vertical-align: middle;">@item.nombreTipologia</td>
                                                <td style="vertical-align: middle;">@item.numeroVivienda</td>
                                                <td style="vertical-align: middle;">@item.servicios</td>
                                                <td style="vertical-align: middle;">@item.nombreTipoProveedor</td>
                                                @*<td style="vertical-align: middle;">@item.rutProveedor - @item.dvProveedor</td>*@
                                                @if (@item.rutProveedor.Trim() == "0")
                                                {
                                                    <td style="vertical-align: middle;">No aplica</td>
                                                }
                                                else
                                                {
                                                    <td style="vertical-align: middle;">@item.rutProveedor - @item.dvProveedor</td>
                                                }
                                                <td style="vertical-align: middle;">@item.nombreProveedor</td>
                                                <td style="vertical-align: middle;">@item.estadoSolicitud</td>

                                                <td style="vertical-align: middle;">
                                                    @item.MontoEntero,@item.MontoDecimal
                                                </td>

                                                @if (@item.numeroAutorizacion > 0)
                                                {
                                                    <td style="vertical-align: middle;">@item.numeroAutorizacion</td>
                                                }
                                                else
                                                {
                                                    <td style="vertical-align: middle;">N/A</td>
                                                }
                                                <td style="vertical-align: middle;">@item.estadoAutorizacion</td>
                                                <td style="vertical-align: middle; text-align: center;">
                                                    <p data-placement="top" data-toggle="tooltip" title="Eliminar">
                                                        @if (Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_EliminarSolPago") || Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_EliminarSolPagoReg"))
                                                        {
                                                            <button type="button" onclick="setId(@item.idSolicitud);" class="btn btn-danger btn-xs" data-title="Delete" data-toggle="modal" data-target="#delete" disabled="@item.DisabledItem">
                                                                <span class="glyphicon glyphicon-trash"></span>
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <button type="button" onclick="setId(@item.idSolicitud);" class="btn btn-danger btn-xs" data-title="Delete" data-toggle="modal" data-target="#delete" disabled="Disabled">
                                                                <span class="glyphicon glyphicon-trash"></span>
                                                            </button>
                                                        }
                                                    </p>
                                                </td>
                                                <td style="vertical-align: middle;">
                                                    <div class="form-check">
                                                        @if (Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_GenerarAutPago") || Minvu.Security.SingleSignOn.CurrentPrincipal.HasTarea("Sim_GenerarAutPagoReg"))
                                                        {
                                                            <input type="checkbox" class="form-check-input" disabled="@item.DisabledItem" checked="@item.Apago" onchange="checkPago()" value="@item.idSolicitud">
                                                        }
                                                        else
                                                        {
                                                            <input type="checkbox" class="form-check-input" disabled="Disabled" checked="@item.Apago" onchange="checkPago()" value="@item.idSolicitud">
                                                        }
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="16" align="center">
                                                No existen datos
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="pull-right">
                            <br />
                            <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#apago" disabled="true" id="btnGenerarPago">
                                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
                                Generar pago
                            </button>
                        </div>
                        <input type="text" name="dataHidden" id="dataHidden" value="" hidden>
                    </div>
                </div>
                </div>
        </div>
    </div>

    <div class="modal fade" id="delete" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
                    <h4 class="modal-title custom_align" id="Heading">Confirmar Eliminación</h4>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger"><span class="glyphicon glyphicon-warning-sign"></span>¿Desea eliminar la Solicitud?</div>
                    <input type="text" name="idSolicitudHidden" id="idSolicitudHidden" value="" hidden>
                </div>
                <div class="modal-footer ">
                    <p class="navbar-text navbar-left" style="font-size:10px">
                        Usuario Responsable: @SiteHelper.NombreCompletoUsuario (@SiteHelper.UserName)
                    </p>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                    <button type="submit" class="btn btn-primary" id="btnSubmit">Sí</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="apago" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-warning-sign" aria-hidden="true"></span></button>
                    <h4 class="modal-title custom_align" id="Heading">Confirmar Generación de Pago</h4>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger"><span class="glyphicon glyphicon-warning-sign"></span>¿Seguro que desea Generar Pago?</div>
                    <input type="text" name="idSolicitudCadenaHidden" id="idSolicitudCadenaHidden" value="" hidden>
                </div>
                <div class="modal-footer ">
                    <p class="navbar-text navbar-left" style="font-size:10px">
                        Usuario Responsable: @SiteHelper.NombreCompletoUsuario (@SiteHelper.UserName)
                    </p>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                    <button type="submit" class="btn btn-primary" id="btnSubmitPago">Sí</button>
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model._informacionProyectoEntities.codigoProyectoInformacionProyecto)
    @Html.HiddenFor(model => model._RegionesEntities.idRegion)
    @Html.HiddenFor(model => model._maestroProgramaEntities.idMaestroPrograma)
    @Html.HiddenFor(model => model._ProvinciasEntities.idProvincia)
    @Html.HiddenFor(model => model._maestroTipologiaEntities.idMaestroTipologia)
    @Html.HiddenFor(model => model._ComunasEntities.idComuna)
    @Html.HiddenFor(model => model._maestroServicioEntities.nombreMaestroServicio)
    @Html.HiddenFor(model => model._maestroLlamadoEntities.idMaestroLlamado)
    @Html.HiddenFor(model => model._proovedorEntities.nombreProveedor)
    @Html.HiddenFor(model => model._maestroTipoProveedorEntities.idMaestroTipoProveedor)
    @Html.HiddenFor(model => model._maestroModalidadEntities.idMaestroModalidad)
    @Html.HiddenFor(model => model._autorizacionEntities.idAutorizacion)
}

<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" id="modalOk">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Éxito</h4>
            </div>
            <div class="modal-body">
                <div id="divBusqueda" class="alert alert-success oculta">
                    <button class="close" type="button" data-dismiss="alert"></button>
                    <strong id="strongBusqueda">Error</strong>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="modal-btn-si">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class="spinner" style="display:none">
    <div class="center-div">
        <div class="inner-div">
            <div class="loader"></div>
        </div>
    </div>
</div>

<script>
    $('#btnBuscar').click(function () {
        $('.spinner').css('display', 'block');
    });
</script>

<script type="text/javascript">
    function setId(idSolicitud) {
        var idPro = idSolicitud;
        $("#idSolicitudHidden").val(idPro);
    }

    function checkPago() {
        checkboxes = document.getElementsByTagName('input'); //obtenemos todos los controles del tipo Input
        checkeado = false;
        idCadena = '';

        for (i = 0; i < checkboxes.length; i++) //recoremos todos los controles
        {
            if (checkboxes[i].type == "checkbox") //solo si es un checkbox entramos
            {
                if (!checkboxes[i].disabled) {//No se toman los que estan en una autorizacion
                    if (checkboxes[i].checked) {//Obtengo si existe algun checkbox marcado
                        checkeado = true;
                        idCadena = idCadena + '|' + checkboxes[i].value;
                    }
                }
            }
        }

        $("#idSolicitudCadenaHidden").val(idCadena.substring(1, (idCadena.length)));

        
        if (checkeado ) {
            $('#btnGenerarPago').removeAttr("disabled");
        }
        else {
            $('#btnGenerarPago').attr("disabled", "true");
        }

        setId("");
    }

    $(document).ready(function () {
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#myTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>

@if (Model._listadoSolicitudesEntities != null)
{
    <script>
        //Puntos de Miles en montos de grilla
        //$(document).ready(function () {
        //    var grilla = document.getElementById('grillaProyectos');
        //    var i = 1;

        //    for (i = 1; i < grilla.rows.length; i++) {
        //        var numero = grilla.rows[i].cells[11].innerHTML;//Numero completo
        //        var parteDecimal = '';//parte decimal del Numero completo
        //        var indice = numero.indexOf(',');//indice desde donde se encuentra la coma del decimal
        //        var parteEntera = '';//parte entera del numero completo

        //        if (indice > 0) {
        //            parteDecimal = numero.substring(indice, numero.length);
        //            parteEntera = numero.substring(0, numero.indexOf(','))
        //        } else {
        //            parteEntera = numero;
        //        }

        //        parteEntera = parteEntera.replace(/\.\b/gi, '');//Reseteo valor sin puntos

        //        parteEntera = parteEntera.toString().split('').reverse().join('').replace(/(?=\d*\.?)(\d{3})/g, '$1.');
        //        parteEntera = parteEntera.split('').reverse().join('').replace(/^[\.]/, '');

        //        grilla.rows[i].cells[11].innerHTML = parteEntera + parteDecimal;
        //    }
        //});
    </script>
}