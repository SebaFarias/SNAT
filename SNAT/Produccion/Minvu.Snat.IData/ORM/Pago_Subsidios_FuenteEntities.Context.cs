//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Minvu.Snat.IData.ORM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Pago_Subsidios_FuenteEntities : DbContext
    {
        public Pago_Subsidios_FuenteEntities()
            : base("name=Pago_Subsidios_FuenteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<ups_ins_FINANZAS_ORDEN_AT_SIMPLICIFICADOYPREVIA_Result> ups_ins_FINANZAS_ORDEN_AT_SIMPLICIFICADOYPREVIA(Nullable<long> codigoOrdenAT, Nullable<int> lineaOrigen, Nullable<int> lineaAplicacion, Nullable<int> tipoLlamado, Nullable<decimal> montoUF, Nullable<decimal> montoPesos, string nota, Nullable<int> chequeRut, string chequeDgv, string chequeNombres, Nullable<int> mandatoRut, string mandatoDgv, string mandatoNombres, Nullable<int> funcionarioCreaRut, Nullable<int> organismo, Nullable<int> indicaATPrevia)
        {
            var codigoOrdenATParameter = codigoOrdenAT.HasValue ?
                new ObjectParameter("CodigoOrdenAT", codigoOrdenAT) :
                new ObjectParameter("CodigoOrdenAT", typeof(long));
    
            var lineaOrigenParameter = lineaOrigen.HasValue ?
                new ObjectParameter("LineaOrigen", lineaOrigen) :
                new ObjectParameter("LineaOrigen", typeof(int));
    
            var lineaAplicacionParameter = lineaAplicacion.HasValue ?
                new ObjectParameter("LineaAplicacion", lineaAplicacion) :
                new ObjectParameter("LineaAplicacion", typeof(int));
    
            var tipoLlamadoParameter = tipoLlamado.HasValue ?
                new ObjectParameter("TipoLlamado", tipoLlamado) :
                new ObjectParameter("TipoLlamado", typeof(int));
    
            var montoUFParameter = montoUF.HasValue ?
                new ObjectParameter("MontoUF", montoUF) :
                new ObjectParameter("MontoUF", typeof(decimal));
    
            var montoPesosParameter = montoPesos.HasValue ?
                new ObjectParameter("MontoPesos", montoPesos) :
                new ObjectParameter("MontoPesos", typeof(decimal));
    
            var notaParameter = nota != null ?
                new ObjectParameter("Nota", nota) :
                new ObjectParameter("Nota", typeof(string));
    
            var chequeRutParameter = chequeRut.HasValue ?
                new ObjectParameter("ChequeRut", chequeRut) :
                new ObjectParameter("ChequeRut", typeof(int));
    
            var chequeDgvParameter = chequeDgv != null ?
                new ObjectParameter("ChequeDgv", chequeDgv) :
                new ObjectParameter("ChequeDgv", typeof(string));
    
            var chequeNombresParameter = chequeNombres != null ?
                new ObjectParameter("ChequeNombres", chequeNombres) :
                new ObjectParameter("ChequeNombres", typeof(string));
    
            var mandatoRutParameter = mandatoRut.HasValue ?
                new ObjectParameter("MandatoRut", mandatoRut) :
                new ObjectParameter("MandatoRut", typeof(int));
    
            var mandatoDgvParameter = mandatoDgv != null ?
                new ObjectParameter("MandatoDgv", mandatoDgv) :
                new ObjectParameter("MandatoDgv", typeof(string));
    
            var mandatoNombresParameter = mandatoNombres != null ?
                new ObjectParameter("MandatoNombres", mandatoNombres) :
                new ObjectParameter("MandatoNombres", typeof(string));
    
            var funcionarioCreaRutParameter = funcionarioCreaRut.HasValue ?
                new ObjectParameter("FuncionarioCreaRut", funcionarioCreaRut) :
                new ObjectParameter("FuncionarioCreaRut", typeof(int));
    
            var organismoParameter = organismo.HasValue ?
                new ObjectParameter("Organismo", organismo) :
                new ObjectParameter("Organismo", typeof(int));
    
            var indicaATPreviaParameter = indicaATPrevia.HasValue ?
                new ObjectParameter("IndicaATPrevia", indicaATPrevia) :
                new ObjectParameter("IndicaATPrevia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ups_ins_FINANZAS_ORDEN_AT_SIMPLICIFICADOYPREVIA_Result>("ups_ins_FINANZAS_ORDEN_AT_SIMPLICIFICADOYPREVIA", codigoOrdenATParameter, lineaOrigenParameter, lineaAplicacionParameter, tipoLlamadoParameter, montoUFParameter, montoPesosParameter, notaParameter, chequeRutParameter, chequeDgvParameter, chequeNombresParameter, mandatoRutParameter, mandatoDgvParameter, mandatoNombresParameter, funcionarioCreaRutParameter, organismoParameter, indicaATPreviaParameter);
        }
    }
}
